package ch.bbw.zork;/** * Class Game - the main class of the "Zork" game. * * Author:  Michael Kolling, 1.1, March 2000 * refactoring: Rinaldo Lanza, September 2020 */public class Game {		private Parser parser;	private Room currentRoom;	private Room entry, livingRoom, kitchen, lobby, office, bathroom, bedroom, secretLab;	public Game() {				parser = new Parser(System.in);		entry = new Room("You are in the entry.");		livingRoom = new Room("You are in the living room.");		kitchen = new Room("You are in the kitchen.");		lobby = new Room("You are in the lobby.");		office = new Room("You are in the office.");		bathroom = new Room("You are in the bathroom.");		bedroom = new Room("You are in the bedroom");		secretLab = new Room("You have found the secret lab. \n Congrats!");		entry.setExits(null, kitchen, lobby, livingRoom );		livingRoom.setExits(null, entry, office, null);		kitchen.setExits(null, null, null, entry);		lobby.setExits(entry, bedroom, bathroom, null);		office.setExits(livingRoom, null, null, null);		bathroom.setExits(lobby, null, null, null);		bedroom.setExits(null, null, null, lobby);		secretLab.setExits(null, null, bedroom, null);		currentRoom = entry; // start game outside		// Task		Task task1 = new Task("Find a Cassette.", "There is a Cassette Recorder. I wish I had a Cassette.", livingRoom);		Task task2 = new Task("Pick up the cassette and enter it in the Cassette recorder", "Here on the Desk is a Cassette I wonder what I can find here", office);		//TODO change living room to casette Item.		Task task3 = new Task("Use Cassette Recorder", null, null );		Task task4 = new Task("Find the secret room", "To come out of the House find the secret room where the key for the front door is hidden", livingRoom);		Task task5 = new Task("Inspect Bookshelf", "This bookshelf looks suspicious.", bedroom );		Task task6 = new Task("find entry to secret lab", "Why does the book looks out of the shelf.", bedroom );		//TODO change null to Key Item.		Task task7 = new Task("take the key and unlock the door", "I have the key", null);	}	/**	 *  Main play routine.  Loops until end of play.	 */	public void play() {		printWelcome();		// Enter the main command loop.  Here we repeatedly read commands and		// execute them until the game is over.		boolean finished = false;		while (!finished) {			Command command = parser.getCommand();			finished = processCommand(command);		}		System.out.println("Thank you for playing.  Good bye.");	}	private void printWelcome() {		System.out.println();		System.out.println("Welcome to Zork!");		System.out.println("Zork is a simple adventure game.");		System.out.println("Type 'help' if you need help.");		System.out.println();		System.out.println(currentRoom.longDescription());	}	private boolean processCommand(Command command) {		if (command.isUnknown()) {			System.out.println("I don't know what you mean...");			return false;		}		String commandWord = command.getCommandWord();		if (commandWord.equals("help")) {			printHelp();		} else if (commandWord.equals("go")) {			goRoom(command);					} else if (commandWord.equals("quit")) {			if (command.hasSecondWord()) {				System.out.println("Quit what?");			} else {				return true; // signal that we want to quit			}		} else if(commandWord.equals("map")) {		}		return false;	}	private void printHelp() {		System.out.println("You are lost. You are alone. You wander");		System.out.println("around at Monash Uni, Peninsula Campus.");		System.out.println();		System.out.println("Your command words are:");		System.out.println(parser.showCommands());	}	private void goRoom(Command command) {		if (!command.hasSecondWord()) {			System.out.println("Go where?");		} else {						String direction = command.getSecondWord();				// Try to leave current room.			Room nextRoom = currentRoom.nextRoom(direction);				if (nextRoom == null)				System.out.println("There is no door!");			else {				currentRoom = nextRoom;				System.out.println(currentRoom.longDescription());			}		}	}}